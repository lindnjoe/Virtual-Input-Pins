# If you are using CAN, define the board info. Make sure to change pin definitions also!
[mcu EBBT2]
#serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_37FF6C063042413830360643-if00 #/dev/serial/by-id/usb-Klipper_stm32g0b1xx_260043001150425539393020-if00 dev/serial/by-id/usb-Klipper_stm32g0b1xx_0D0039000E50425539393020-if00

canbus_uuid: b5834e9c2423
# Extruder Example, change as needed. If this is T1, then should be something like extruder1

[tool T2]
params_has_filament_sensor: False
#change this too
toolchanger: toolchanger
tool_number: 2
#if this were T1, then this would be extruder1, etc
extruder: extruder2
#Change T0_partfan to tool number
fan: fan_generic T2_partfan

gcode_x_offset: 0.663
gcode_y_offset: -0.111
gcode_z_offset: 0.145
params_type: 'sc'
#This is the path the tool change takes. Shouldn't have to change it. Unless
#you are using a custom dock
params_sc_path: [{'y':9.5 ,'z':6}, {'y':9.5, 'z':2}, {'y':5.5, 'z':0}, {'z':0, 'y':0, 'f':0.5}, {'z':-10, 'y':0}, {'z':-10, 'y':16}]
#These are build specific, its where the tool is sititng in it's dock.
params_park_x: 78.7 #100.8 #105 #104.5 #144.9
params_park_y: -7.0 #-7.0 #6.4 #9.5 #18.2 #29 #10
params_park_z: 326.0 #268.65
params_safe_y: 110.0 #30
# For InputShaper run per tool and enter the frequency here, the type can not
# be changed currently, so the type will be global and shared
params_input_shaper_type_x: 'mzv'
params_input_shaper_type_y: 'mzv'
params_input_shaper_freq_x: 55.2
params_input_shaper_freq_y: 40.0
params_input_shaper_damping_ratio_x: 0.077
params_input_shaper_damping_ratio_y: 0.066 

[adxl345 T2]
cs_pin: EBBT2: PB12
#spi_bus: spi2
spi_software_sclk_pin: EBBT2: PB10
spi_software_mosi_pin: EBBT2: PB11
spi_software_miso_pin: EBBT2: PB2
axes_map: z,-y,x

#[resonance_tester]
#accel_chip: adxl345
#probe_points: 175,175,20

[extruder2]
step_pin: EBBT2:PD0
dir_pin: EBBT2:PD1
enable_pin: !EBBT2:PD2
microsteps: 16
full_steps_per_rotation: 200 # Single-turn pulse number (200 is 1.8 degrees, 400 is 0.9 degrees)
rotation_distance: 4.637 # Driving pulley circumference mm
## Calibration step value: rotation_distance = <old rotation_distance> * <actual extrusion length> / <requested extrusion length>
#gear_ratio: 50:10 # Reduction ratio (Galileo gear ratio 7.5:1 and comment out this line; BMG is 50:17, output shaft in front, input shaft in rear)
nozzle_diameter: 0.400 # Nozzle diameter
filament_diameter: 1.750 # filament diameter
heater_pin: EBBT2: PB13 # Extrusion head heating rod control pin setting (e0)
sensor_type: ATC Semitec 104NT-4-R025H42G #Generic 3950 #my_thermistor_e #MAX31865 # Sensor model
#pullup_resistor: 11500
#spi_bus: spi1
#rtd_nominal_r: 100
#rtd_reference_r: 430
#rtd_num_of_wires: 2
sensor_pin: EBBT2:PA3 # Extrusion head sensor Pin (T_E0)
min_temp: -250                  
max_temp: 305                 
max_power: 1.0                
min_extrude_temp: 150         
control : pid
pid_kp : 22.357 #37
pid_ki : 8.857
pid_kd : 36.780
pressure_advance: 0.032       
pressure_advance_smooth_time: 0.040    
max_extrude_only_distance: 500.0
max_extrude_only_velocity: 120.0
#max_extrude_only_accel: 1500
max_extrude_cross_section: 8

[tmc2209 extruder2]
uart_pin: EBBT2: PA15
interpolate: false
#hold_current: 0.100
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0 # Silence threshold (if silence is not required, please change the value to 0)
# driver_TBL: 0 
# driver_HEND: 6 
# driver_HSTRT: 7 
# driver_TOFF: 4 


# Change tool number if needed here
[fan_generic T2_partfan]
 pin: EBBT2:PA1
# fan: multi_fan EBBT2_partfan
# Change tool number if needed here

[heater_fan T2_hotend_fan]
pin: EBBT2:PA0
# Change extruder tool number if needed here
heater: extruder2
max_power: 1.0
heater_temp: 50.0
kick_start_time: 0.5
#tachometer_pin:EBBT2:PA1
#tachometer_ppr: 1
#tachometer_poll_interval: 0.0013

#Change tool number if needed in the next line, as well ast the last line
# [gcode_macro T2]
# variable_color: ""
# gcode:
#   SELECT_TOOL T=2

#change the tool numbers to the tool you are configuring, ie T0, T1, etc

[gcode_macro T2]
variable_active: 0
variable_color: ""
gcode:
    SELECT_TOOL T=2


[neopixel led]
pin: EBBT2:PD3
chain_count: 3
color_order: GRBW
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 1.0

# [tool_probe_endstop]
# crash_mintime: 0.7 # seconds to wait before announcing a crash, if the probe stops 
#   #triggering before this, no crash is reported. 
# crash_gcode:
#     RESPOND TYPE=error MSG='Tool not detected, expected {printer.toolchanger.tool_number}. Pausing the print.' 
#     M84
#     TURN_OFF_HEATERS

# Change tool number if needed
[tool_probe T2]
pin: ^EBBT2:PB6 #^EBBT4:PB6
tool: 2
x_offset: 0 # X axis-sensor relative nozzle offset
y_offset: 0 # Y axis-sensor relative nozzle offset
z_offset: -1.054 # Z axis-sensor relative nozzle offset
# drop_first_result: True # enable is on danger-klipper
speed: 10.0
lift_speed: 30
samples: 4
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.02
samples_tolerance_retries: 3
activate_gcode:
    _TAP_PROBE_ACTIVATE HEATER=extruder2



# [filament_switch_sensor filament_sensor_T2]
# switch_pin: !EBBT2:PB9
# pause_on_runout: False
# event_delay: 1.0
# pause_delay: 0.1
# runout_gcode:
#   # SET_GCODE_VARIABLE MACRO=EBBT2 VARIABLE=filament_consumed VALUE=1
#   # _RUNOUT_INIT
# insert_gcode:
  # M118 T2 reports: Filament Detected
  # SET_GCODE_VARIABLE MACRO=EBBT2 VARIABLE=filament_consumed VALUE=0
  #  _FILAMENT_LOAD_INIT TOOL=2

# [gcode_button filament_unload_t2]
# pin: EBBT2:PB4 # remove the negation "!" for sensor v1 - use just PA9 as example
# press_gcode:  # filament unload procedure   
#   _UNLOAD_TANGLE_INIT TOOL=2
# release_gcode: # do not add any macro call here  