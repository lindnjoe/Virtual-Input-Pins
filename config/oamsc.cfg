# Please refer to the documentation for the OpenAMS project at https://openams.si-forge.com/en/docs/klipper-config
# Some of the values below will have to be changed and calibrated, please refer to https://openams.si-forge.com/en/docs/startup-checks
# Please read the comments below as they contain important configuration information


[mcu fps]
canbus_uuid: a839e785afe7

[mcu oams_mcu1]
canbus_uuid: 7564b5192d2f


# Multiple FPS + OAMS
[mcu fps2]
canbus_uuid: 8ce81ea7909b

[mcu oams_mcu2]
canbus_uuid: 8390c2a8b538

# individual variables used in oams_macros.cfg. please adapt to your printer and situation
[gcode_macro _oams_macro_variables]
#filament cutter
variable_pre_cut_x:                       30  # pre-cut x-position    
variable_pre_cut_y:                      338.19  # pre-cut y-position
variable_pre_cut_speed:                 20000  # moving speed to pre-cut position
variable_cut_x:                            3.25  # cut x-position
variable_cut_y:                          338.19  # cut y-position
variable_cut_speed:                     800  # cutting speed

# toolhead filament length parameters
# the Miro extruder (https://www.printables.com/model/1008903-the-miro-extruder) values:
variable_hotend_meltzone_compensation:     0
variable_retract_length:                  10
variable_extrusion_reload_length:         62         
variable_extrusion_unload_length:         45
variable_reload_speed:                    300

# extruder filament switches
# Enable these with the correct switch pin for your machine
# if you want to use additional filament sensors in the
# OpenAMS system macros, to verify filament was correctly
# loaded into and unload out of the toolhead
variable_fs_extruder_in1:               True   # set to True if exist
variable_fs_extruder_out1:              False   # set to True if exist
variable_fs_extruder_in2:               True   # set to True if exist
variable_fs_extruder_out2:              False   # set to True if exist

gcode:

#filament sensor at extruder inlet
[filament_switch_sensor extruder_in1]          # uncomment if exist
   switch_pin: ^!EBBT4:PB6                   # uncomment and adapt pin if exist
   pause_on_runout: False                     # uncomment if exist

#filament sensor between extruder and hotend
# [filament_switch_sensor extruder_out1]         # uncomment if exist
#   switch_pin: ^!EBBT4:PB3                    # uncomment and adapt pin if exist
#   pause_on_runout: False                     # uncomment if exist 


#filament sensor at extruder inlet
[filament_switch_sensor extruder_in2]          # uncomment if exist
   switch_pin: ^!EBBT8:PB6                   # uncomment and adapt pin if exist
   pause_on_runout: False                     # uncomment if exist

#filament sensor between extruder and hotend
# [filament_switch_sensor extruder_out2]         # uncomment if exist
#   switch_pin: ^!EBBT8:PB3                    # uncomment and adapt pin if exist
#   pause_on_runout: False                     # uncomment if exist 

[oams oams1]
mcu:oams_mcu1




# FPS slide HES value (which shoudl be 0 when offloaded and 1 when fully loaded)
# at which slide position of FPS controls function of AMS Hub Motor
# upper and lower threshold are averaged, so in this example (0.7 + 0.3)/2.0 = 0.5
# is the value the PID loop continuously adjusts the OAMS Hub Motor speed to 
# maintain filament pressure at this set point
fps_upper_threshold:          0.7  # value from which OAMS Hub Motor works on full speed 
fps_lower_threshold:          0.3  # from 0 to this value OAMS Hub Motor stops

# This value instructs if the FPS slide HES value should be reversed
# and is critical to the operation of the OpenAMS
# and the machine is on and unloaded (no filament)
# you can check the value of the FPS by checking klippy.log
# from the command line
# tail -f ~/printer_data/logs/klippy.log
# the value of the unloaded AMS / FPS should be close to 0
# if the value instead is close to 1.0, change the fps_is_reversed value to false
fps_is_reversed: true

# These are the HES values for the first stage feeders (which range from 0.0 to 1.0)
# at which filament is considered to be loaded into the spool bay
f1s_hes_on: 0.1, 0.1, 0.1, 0.1
# this here is instructing the software to take the f1s hes value and consider the
# switch OFF if it is ABOVE the f1s_hes_on value
f1s_hes_is_above: false

# These values should be calibrated and changed by using the output
# from the OAMS_CALIBRATE_HUB_HES
# These are values above which the HUB motor sensors are considered to be ON
hub_hes_on:0.831522, 0.834890, 0.844210, 0.840863
hub_hes_is_above: true

# This value instructs the firmware on WHEN to start checking the
# value of the FPS slide to stop loading filament.
# When the OAMS has fed this ptfe_length - 100mm, it will slow down the speed of the feeder and 
# check if the slide is above the fps_upper_threshold.
# If this is the case, the loading will stop, assuming the 
# the filament bottomed out at the top of the gears of the toolhead extruder.
# If you have too much friction on the PTFE tubing, sharp bends, kinks, etc, you might
# have to solve these issues to lower the friction.
# A stiffer spring is provided with the OpenAMS kit to compensate for
# longer ptfe tube lengths.
ptfe_length: 1910 #1833 #1892 #2110 # this value is critical and needs to changed to the PTFE length
               # of your machine please refer to the documentation at https://openams.si-forge.com/en/docs/startup-checks

# These values change the spool rewind behavior, by adjusting the speed of the Hub motor
# so the current in the DC First stage motors matches (as closely as the PID control allows)
# the supplied value.
# Unless you have a very special situation, they should not be changed usually.
# The current target is the value from (0.0 to 1.0) to try to maintain the DC First stage 
# motor current while rewinding
current_target: 0.30
# These are the PID values for the rewind PID loop
current_kp: 3.0
current_ki: 0.0 
current_kd: 0.0

# The index of the oams, using when creating filament groups, such as oams1, or oams2
# This index is also use in the canbus logging script (scripts/canbus_logger.py) to
# print debug information and identify the AMS
# The index is also shown on the status information printed in klippy.log in order
# to distinguish between multiple AMS
oams_idx: 1

[oams oams2]
mcu:oams_mcu2




# FPS slide HES value (which shoudl be 0 when offloaded and 1 when fully loaded)
# at which slide position of FPS controls function of AMS Hub Motor
# upper and lower threshold are averaged, so in this example (0.7 + 0.3)/2.0 = 0.5
# is the value the PID loop continuously adjusts the OAMS Hub Motor speed to 
# maintain filament pressure at this set point
fps_upper_threshold:          0.7  # value from which OAMS Hub Motor works on full speed 
fps_lower_threshold:          0.3  # from 0 to this value OAMS Hub Motor stops

# This value instructs if the FPS slide HES value should be reversed
# and is critical to the operation of the OpenAMS
# and the machine is on and unloaded (no filament)
# you can check the value of the FPS by checking klippy.log
# from the command line
# tail -f ~/printer_data/logs/klippy.log
# the value of the unloaded AMS / FPS should be close to 0
# if the value instead is close to 1.0, change the fps_is_reversed value to false
fps_is_reversed: true

# These are the HES values for the first stage feeders (which range from 0.0 to 1.0)
# at which filament is considered to be loaded into the spool bay
f1s_hes_on: 0.1, 0.1, 0.1, 0.1
# this here is instructing the software to take the f1s hes value and consider the
# switch OFF if it is ABOVE the f1s_hes_on value
f1s_hes_is_above: false

# These values should be calibrated and changed by using the output
# from the OAMS_CALIBRATE_HUB_HES
# These are values above which the HUB motor sensors are considered to be ON
hub_hes_on:0.793050, 0.810562, 0.813696, 0.783394
hub_hes_is_above: true

# This value instructs the firmware on WHEN to start checking the
# value of the FPS slide to stop loading filament.
# When the OAMS has fed this ptfe_length - 100mm, it will slow down the speed of the feeder and 
# check if the slide is above the fps_upper_threshold.
# If this is the case, the loading will stop, assuming the 
# the filament bottomed out at the top of the gears of the toolhead extruder.
# If you have too much friction on the PTFE tubing, sharp bends, kinks, etc, you might
# have to solve these issues to lower the friction.
# A stiffer spring is provided with the OpenAMS kit to compensate for
# longer ptfe tube lengths.
ptfe_length: 2300 #1833 #1892 #2110 # this value is critical and needs to changed to the PTFE length
               # of your machine please refer to the documentation at https://openams.si-forge.com/en/docs/startup-checks

# These values change the spool rewind behavior, by adjusting the speed of the Hub motor
# so the current in the DC First stage motors matches (as closely as the PID control allows)
# the supplied value.
# Unless you have a very special situation, they should not be changed usually.
# The current target is the value from (0.0 to 1.0) to try to maintain the DC First stage 
# motor current while rewinding
current_target: 0.30
# These are the PID values for the rewind PID loop
current_kp: 3.0
current_ki: 0.0 
current_kd: 0.0

# The index of the oams, using when creating filament groups, such as oams1, or oams2
# This index is also use in the canbus logging script (scripts/canbus_logger.py) to
# print debug information and identify the AMS
# The index is also shown on the status information printed in klippy.log in order
# to distinguish between multiple AMS
oams_idx: 2

[filament_group T4]
group: oams1-0

[filament_group T5]
group: oams2-0

[filament_group T6]
group: oams1-1

[filament_group T7]
group: oams1-2

[filament_group T8]
group: oams1-3

[filament_group T9]
group: oams2-1

[filament_group T10]
group: oams2-2

[filament_group T11]
group: oams2-3

[fps fps1]
pin: fps:PA2
reversed: false
oams: oams1
extruder: extruder4

# Multiple FPS + OAMS
[fps fps2]
pin: fps2:PA2
reversed: false
oams: oams2
extruder: extruder5


# [temperature_sensor oams1]
# # This is a sensor which is currently not part of klipper's main line
# # In order for the sensor to work, the klipper_openams plugin modifies the
# # file ~/klipper/klippy/extras/temperature_sensors.cfg
# # This causes the main line klipper repository branch on mainsail to become "dirty"
# # While this is not a problem, this issue should be resolved
# # once the HDC1080 temperature and humidity sensor driver is included in klipper
# # main line
# sensor_type: HDC1080
# i2c_address: 64 # this is the address of the device as given by TI
# i2c_mcu: oams_mcu1
# i2c_bus:i2c0
# #i2c_software_scl_pin:oams:PB6
# #i2c_software_sda_pin:oams:PB7
# i2c_speed:200000
# temp_offset = 0.0
# humidity_offset = 0.0

# temp_resolution = 14 # given in bits
# humidity_resolution = 14 # given in bits

# [temperature_sensor oams2]
# # This is a sensor which is currently not part of klipper's main line
# # In order for the sensor to work, the klipper_openams plugin modifies the
# # file ~/klipper/klippy/extras/temperature_sensors.cfg
# # This causes the main line klipper repository branch on mainsail to become "dirty"
# # While this is not a problem, this issue should be resolved
# # once the HDC1080 temperature and humidity sensor driver is included in klipper
# # main line
# sensor_type: HDC1080
# i2c_address: 64 # this is the address of the device as given by TI
# i2c_mcu: oams_mcu2
# i2c_bus:i2c0
# #i2c_software_scl_pin:oams:PB6
# #i2c_software_sda_pin:oams:PB7
# i2c_speed:200000
# temp_offset = 0.0
# humidity_offset = 0.0

# temp_resolution = 14 # given in bits
# humidity_resolution = 14 # given in bits


[oams_manager]

[include oams_macros.cfg]
