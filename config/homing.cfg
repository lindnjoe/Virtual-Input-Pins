



[gcode_macro homing_override_config]
variable_sensorless_x: True
variable_sensorless_y: True
variable_homing_rebound_y: 10
variable_stepper_driver: "tmc5160"
variable_homing_current: 0.4
gcode: 


[homing_override]
axes: xyz
gcode:
  INITIALIZE_TOOLCHANGER
  {% if printer.probe.last_query %}
    RESPOND TYPE=error MSG='Z Probe triggered, cannot home.'
  {% else %}
    SET_GCODE_OFFSET X=0.0 Y=0.0 Z=0.0
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

    {% set config = printer["gcode_macro homing_override_config"] %}


    G90 ; absolute mode
    {% if 'z' not in printer.toolhead.homed_axes %}
      SET_KINEMATIC_POSITION Z=0
      G0 Z10 F1000
    {% elif printer.toolhead.position[2]|float < 10 %}
      G0 Z10 F1000
    {% endif %}

    {% if home_all or 'Y' in params or 'X' in params %}
      {% if config.sensorless_y %}
        _SENSORLESS_HOME AXIS=Y
      {% else %}
        G28 Y
      {% endif %}
      G0 Y{ max_y - config.homing_rebound_y } F6000
    {% endif %}

    {% if home_all or 'X' in params %}
      {% if config.sensorless_x %}
        _SENSORLESS_HOME AXIS=X
      {% else %}
        G28 X
      {% endif %}
      G0 X{ max_x - 10} F6000
    {% endif %}

    {% if home_all or 'Z' in params %}
      {% set random_x = (range(-50, 50) | random) / 10 %}
      {% set random_y = (range(-50, 50) | random) / 10 %}

      G90 ; absolute mode
      M400
      G0 X{( max_x / 2 ) + random_x} Y{( max_y / 2 ) + random_y} F12000
      G28 Z
      _ADJUST_Z_HOME_FOR_TOOL_OFFSET
    {% endif %}
    _APPLY_ACTIVE_TOOL_GCODE_OFFSETS
    M400
  {% endif %}



; Depending on the selected tool at the time of homing, the physical Z endstop position is offset.
; This corrects for that using current tool offset.
[gcode_macro _ADJUST_Z_HOME_FOR_TOOL_OFFSET]
gcode:
      G90 ; absolute mode
      G0 Z10 F1000
      {% set tool = printer.toolchanger.tool %}
      {% if tool %}
         {% set tool_z_offset = printer[tool].gcode_z_offset %}
         {% set probe_z_offset = printer.tool_probe_endstop.active_tool_probe_z_offset %}
         SET_KINEMATIC_POSITION Z={10.0+tool_z_offset|float+probe_z_offset|float}
      {% endif %}

[gcode_macro _APPLY_ACTIVE_TOOL_GCODE_OFFSETS]
gcode:
    ; Apply gcode offsets
    {% set tool = printer.toolchanger.tool %}
    {% if tool %}
      SET_GCODE_OFFSET X={printer[tool].gcode_x_offset} Y={printer[tool].gcode_y_offset} Z={printer[tool].gcode_z_offset}
    {% endif %}

[gcode_macro TOOL_BED_MESH_CALIBRATE]
gcode:
      {% set tool_z_offset = printer[printer.toolchanger.tool].gcode_z_offset %}
      G90 ; absolute mode
      G0 Z10 F1000
      # Bed mesh knows about the probe offset, but not about the tool offset.
      SET_KINEMATIC_POSITION Z={10.0-tool_z_offset|float}
      BED_MESH_CALIBRATE
      G0 Z10 F1000
      SET_KINEMATIC_POSITION Z={10.0+tool_z_offset|float}